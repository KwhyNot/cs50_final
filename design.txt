
Christopher Murphy

Aurora


As far as design decisions in my project, a lot of it came down to figuring out
how to piece together existing libraries, and code, that had previously been 
developed for various Hue applications. Some of this came down to figuring out
how to port over some aspect of a library that was written for a Windows machine
and to get it to work on my Mac. 

I spent a lot of time trying to find an efficient method for taking iterative 
screenshots, but ultimately just went with the option of a system call to the 
screencapture function that is included in the Mac operating system. 

Efficiency was a significant concern overall, as the program was going to need
to run fast enough to update the lights in more or less real-time. I found several 
ways of addressing these concerns. For instance, averageRGB bases the average values
on only 1/64th of the actual pixels in the screenshot. I found that this didn't have 
notable effect as far accuracy of the color representation. I also chose to calculate 
the brightness using a less complex calculation method (without gamma correction), as 
this too cut down on computational demands while still preserving a good approximation 
of the brightness of the screen.

Another issue that I encountered was that of some libraries not interfacing well with 
others, and my having to tweak things a bit to get them to work together. An example
of this is that the rgbToCIE1931() function kept having a "float division by 0" error 
anytime that the screen faded to black in a movie. To address this, I wrote a function
to check if the sum of the RGB values was equal to zero and, if it was, reset the values
to be small, non-zero, values.

Overall, I am very happy with how the project turned out, and I hope you enjoy playing 
around with it!

